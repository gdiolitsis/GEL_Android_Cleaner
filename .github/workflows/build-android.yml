name: Build Android APK (Cordova + GEL Plugin)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openjdk-17-jdk unzip curl wget imagemagick
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Install Gradle 8.5
        run: |
          wget https://services.gradle.org/distributions/gradle-8.5-bin.zip
          unzip -q gradle-8.5-bin.zip
          sudo mv gradle-8.5 /opt/gradle
          echo "/opt/gradle/bin" >> $GITHUB_PATH
          gradle -v

      - name: Install Android SDK tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -s https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o tools.zip
          unzip -q tools.zip -d latest
          rm tools.zip
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;33.0.2" "platforms;android-33"

      - name: Install Cordova
        run: npm install -g cordova@12.0.0

      - name: Clean previous build folder
        run: rm -rf GEL_Cleaner

      - name: Create Cordova project
        run: |
          cordova create GEL_Cleaner com.gel.cleaner "GEL Android Cleaner"
          cd GEL_Cleaner
          cordova platform add android@12
          mkdir -p www/img
          cp ../app/www/index.html www/index.html || true
          cp -r ../app/www/css www/css || true
          cp -r ../app/www/js www/js || true
          cp -r ../app/www/img/* www/img/ || true
          cp ../app/config.xml config.xml || true
          cp -r ../app/cordova-plugin-gelcleaner ./cordova-plugin-gelcleaner || true

      - name: Install GEL Cleaner + dependencies
        run: |
          cd GEL_Cleaner
          cordova plugin add ./cordova-plugin-gelcleaner
          cordova plugin add cordova-plugin-inappbrowser

      - name: Remove default Cordova logos
        run: |
          cd GEL_Cleaner
          rm -f www/logo.png || true
          rm -f www/img/logo.png || true

      - name: Resize GEL logo for launcher icon
        run: |
          cd GEL_Cleaner/www/img
          if [ -f "GEL_logo.png" ]; then
            convert GEL_logo.png -resize 512x512\> GEL_logo_512.png
          fi

      - name: Clean Android platform (force fresh www)
        run: |
          cd GEL_Cleaner
          rm -rf platforms/android plugins
          cordova platform add android@12

      - name: Replace Android launcher icons with GEL logo
        run: |
          cd GEL_Cleaner
          if [ -f "www/img/GEL_logo_512.png" ]; then
            for d in platforms/android/app/src/main/res/mipmap-*; do
              rm -f "$d/ic_launcher.png" "$d/ic_launcher_round.png" "$d/ic_launcher.xml" || true
              cp www/img/GEL_logo_512.png "$d/ic_launcher.png" || true
              cp www/img/GEL_logo_512.png "$d/ic_launcher_round.png" || true
            done
          fi

      # ---------- DEBUG BUILD (όπως πριν) ----------
      - name: Build with Gradle 8.5 (debug)
        run: |
          cd GEL_Cleaner
          export PATH=/opt/gradle/bin:$PATH
          cordova build android --debug --no-update-notifier

      - name: Upload APK artifact (debug)
        uses: actions/upload-artifact@v4
        with:
          name: GEL_Cleaner_debug.apk
          path: GEL_Cleaner/platforms/android/app/build/outputs/apk/debug/app-debug.apk

      # ---------- OPTIONAL SIGNED RELEASE ----------
      - name: Restore keystore from secrets (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 && secrets.ANDROID_KEYSTORE_PASSWORD && secrets.ANDROID_KEY_ALIAS && secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $HOME/forestrock-release.keystore
          ls -l $HOME/forestrock-release.keystore

      - name: Build release (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 && secrets.ANDROID_KEYSTORE_PASSWORD && secrets.ANDROID_KEY_ALIAS && secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: |
          cd GEL_Cleaner
          export PATH=/opt/gradle/bin:$PATH
          cordova build android --release --no-update-notifier

      - name: Sign + zipalign (optional)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 && secrets.ANDROID_KEYSTORE_PASSWORD && secrets.ANDROID_KEY_ALIAS && secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: |
          ANDROID_HOME=/usr/local/lib/android/sdk
          cd GEL_Cleaner/platforms/android/app/build/outputs/apk/release
          $ANDROID_HOME/build-tools/33.0.2/zipalign -f 4 app-release-unsigned.apk app-release-aligned.apk
          $ANDROID_HOME/build-tools/33.0.2/apksigner sign \
            --ks $HOME/forestrock-release.keystore \
            --ks-pass pass:"${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
            --ks-key-alias "${{ secrets.ANDROID_KEY_ALIAS }}" \
            --key-pass pass:"${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}" \
            --out GEL_Android_Cleaner-release-signed.apk \
            app-release-aligned.apk

      - name: Upload APK artifact (release signed) - optional
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 && secrets.ANDROID_KEYSTORE_PASSWORD && secrets.ANDROID_KEY_ALIAS && secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        uses: actions/upload-artifact@v4
        with:
          name: GEL_Android_Cleaner_release_signed.apk
          path: GEL_Cleaner/platforms/android/app/build/outputs/apk/release/GEL_Android_Cleaner-release-signed.apk
