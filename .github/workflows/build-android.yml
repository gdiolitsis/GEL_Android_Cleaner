name: Build Android APK (Cordova)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openjdk-17-jdk unzip curl wget
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
          echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Install Gradle 8.7
        run: |
          wget https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q gradle-8.7-bin.zip
          sudo mv gradle-8.7 /opt/gradle
          echo "/opt/gradle/bin" >> $GITHUB_PATH
          gradle -v

      - name: Install Android SDK tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          curl -s https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o tools.zip
          unzip -q tools.zip -d latest
          rm tools.zip
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;33.0.2" "platforms;android-33"

      - name: Install Cordova
        run: npm install -g cordova

      - name: Clean previous build folder
        run: rm -rf GEL_Cleaner

      - name: Create Cordova project
        run: |
          cordova create GEL_Cleaner com.gel.cleaner "GEL Android Cleaner"
          cd GEL_Cleaner
          cordova platform add android@12
          cordova plugin add cordova-plugin-cache-clear
          cordova plugin add cordova-plugin-appdata-cleaner
          cordova plugin add cordova-plugin-appminimize
          echo '<widget id="com.gel.cleaner" version="1.2.0" xmlns="http://www.w3.org/ns/widgets"><name>GEL Cleaner</name><content src="index.html"/></widget>' > config.xml
          sed -i '1i import groovy.xml.XmlParser' platforms/android/CordovaLib/cordova.gradle
          mkdir -p www/img
          # Œ†œÅŒøœÉŒ∏ŒÆŒ∫Œ∑ ŒªŒøŒ≥œåœÑœÖœÄŒøœÖ Œ±œÄœå œÑŒø Œ¥ŒπŒ∫œå œÉŒøœÖ repo
          wget -O www/img/GEL_logo.png https://raw.githubusercontent.com/gdiolitsis/GEL_Android_Cleaner/main/www/img/GEL_logo.png
          # ŒîŒ∑ŒºŒπŒøœÖœÅŒ≥ŒØŒ± Œ±œÅœáŒπŒ∫ŒÆœÇ œÉŒµŒªŒØŒ¥Œ±œÇ
          cat > www/index.html <<'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>GEL Android Cleaner</title>
  <style>
    body {
      background: #0e0e0e;
      color: #ffcc33;
      font-family: "Segoe UI", Arial, sans-serif;
      text-align: center;
      padding-top: 20%;
    }
    img {
      width: 120px;
      margin-bottom: 20px;
      border-radius: 20px;
      box-shadow: 0 0 15px #ffcc33;
    }
    h1 { color: #ffcc33; margin-bottom: 10px; }
    button {
      display: block;
      margin: 10px auto;
      padding: 12px 20px;
      border: none;
      border-radius: 8px;
      background-color: #ffcc33;
      color: #0e0e0e;
      font-weight: bold;
    }
    #status {
      margin-top: 20px;
      color: #aaa;
    }
  </style>
</head>
<body>
  <img src="img/GEL_logo.png" alt="GEL Logo"/>
  <h1>GEL Android Cleaner</h1>
  <button onclick="simpleClean()">üßπ Simple Clean</button>
  <button onclick="deepClean()">üöø Deep Clean</button>
  <button onclick="killApps()">üî™ APK Killer</button>
  <p id="status">Waiting for device...</p>

  <script>
    document.addEventListener("deviceready", function() {
      document.getElementById("status").innerText = "Device ready. Dark-Gold Edition v1.2";
    }, false);

    function simpleClean() {
      document.getElementById("status").innerText = "üßπ Running Simple Clean...";
      try {
        window.cache.clear(function(){
          document.getElementById("status").innerText = "‚úÖ Cache cleared!";
        }, function(err){
          document.getElementById("status").innerText = "‚ùå Error: " + err;
        });
      } catch(e) {
        document.getElementById("status").innerText = "‚ö†Ô∏è Cache plugin not available.";
      }
    }

    function deepClean() {
      document.getElementById("status").innerText = "üöø Deep Cleaning app data...";
      try {
        window.AppDataCleaner.clean(function(){
          document.getElementById("status").innerText = "‚úÖ Deep Clean completed!";
        }, function(e){
          document.getElementById("status").innerText = "‚ùå Error: " + e;
        });
      } catch(e) {
        document.getElementById("status").innerText = "‚ö†Ô∏è Deep Clean plugin not available.";
      }
    }

    function killApps() {
      document.getElementById("status").innerText = "üî™ Killing background apps...";
      try {
        window.plugins.appMinimize.minimize();
        document.getElementById("status").innerText = "‚úÖ Non-system apps killed!";
      } catch(e) {
        document.getElementById("status").innerText = "‚ö†Ô∏è Killer plugin not available.";
      }
    }
  </script>
</body>
</html>
EOF

      - name: Patch Gradle wrapper issue
        run: |
          cd GEL_Cleaner/platforms/android
          mkdir -p gradle/wrapper
          cat > gradle/wrapper/gradle-wrapper.properties <<EOF
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF
          cd ../..

      - name: Build with Gradle 8.7
        run: |
          cd GEL_Cleaner
          export PATH=/opt/gradle/bin:$PATH
          cordova build android --debug --no-update-notifier

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: GEL_Cleaner_debug.apk
          path: GEL_Cleaner/platforms/android/app/build/outputs/apk/debug/app-debug.apk
